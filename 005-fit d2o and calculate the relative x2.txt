//************************************************************************************************
//This program is used to fit the d2o curve at different voltages with gaussion mode
//************************************************************************************************
//choose the d2o's data which used to do gaussion fitting
//ph=5.8;//ph value.
dataset listvol1={-1.2,-1.0,-0.8,-0.6,-0.4,-0.2,0,0.2,0.4};
//dataset listvol2={-0.8,-0.6,-0.4,-0.2,0};
//dataset listvol3={-0.8,-0.6,-0.4,-0.2,0};
nvol1=listvol1.getsize();
//nvol2=listvol2.getsize();
//nvol3=listvol3.getsize();
string samp$="si100e2(scratched)";
//string refbook$="book3";nrefvol=nvol1;//set your reference X2.modify every time.;
//..................................................................................................;
// do gauss fitting to the spectra of d2o
loop(ii,$(4+nvol1),$(3+nvol1*2))
{
	nlbegin iy:=d2o1!(1,$(ii)) func:=gauss nltree:=nlt;
	nlt.xc=3300;
	//nlt.f_xc=1;
	nlt.y0=0;
	nlt.f_y0=1;
	nlfit;
	nlend out:=1;
}
nlbegin iy:=quartz!(1,2) func:=gauss nltree:=nlt;
nlt.xc=3300;
//nlt.f_xc=1;
nlt.y0=0;
nlt.f_y0=1;
nlfit;
nlend out:=1;
//...................................................................................................
//read the spectra after fitting with gaussion into one sheet
range waven=fitd2o1!col(1);
range temp=fitnlcurve$(1)!col(1);
waven=temp;
range temp=d2o1!col(1);
waven[l]$=temp[l]$;waven[u]$=temp[u]$;waven[c]$=temp[c]$;

for(ii=0;ii<nvol1;ii++)
{
	range fit=fitd2o1!col($(ii+2));
	range temp=fitnlcurve$(ii+1)!col(2);
	fit=temp;
	range temp=d2o1!col($(ii+4));
	fit[l]$=temp[l]$;fit[u]$=temp[u]$;fit[c]$="fit_"+temp[c]$;
}
wsort w:=fitd2o1 descending:=1 bycol:=1 c1:=1 c2:=$(1+nvol1);
//....................................................................................;
// read the areas of gauss fitting above at different voltages into one sheet
range vol=fitd2o1!col($(nvol1+2));
vol[l]$=voltage;vol[u]$=V;
range area=fitd2o1!col($(nvol1+3));
area[l]$=area of gauss;area[c]$=ph$(ph);
for(ii=0;ii<nvol1;ii++)
{
	vol[$(ii+1)]=$(listvol1[ii+1]);
	if($(listvol1[ii+1])<0.0001&&$(listvol1[ii+1])>-0.0001)
	{
		vol[$(ii+1)]=0;
	}
	area[$(ii+1)]=fitnl$(ii+1)!cell(1,17);
}

//...................................................................................;

//do parabolic fitting to the areas of gauss fitting above
range vol=fitd2o1!col($(nvol1+2));
range area=fitd2o1!col($(nvol1+3));
range fit=fitd2o1!col($(nvol1+4));
range coef=fitd2o1!col($(nvol1+5));
fitpoly (vol,area) 2 0 0 coef (vol,fit);
a=coef[1];//a+bx+cx^2
b=coef[2];
c=coef[3];
d=-b/2/c;//c(x-d)^2+e;
coef[4]=d;
e=a-b*b/4/c;
coef[5]=e;
fit[l]$=area[l]$;fit[c]$="fit_"+area[c]$;
coef[c]$=Polynomial Coefficients;

area_qz=fitnl$(nvol1+1)!cell(1,17);
range x2=fitd2o1!col($(nvol1+6));
x2[l]$=|X\+((2))\-(eff_H\-(2)O)|;x2[u]$=10\+(-21)m\+(2)V\+(-1);x2[c]$=area[c]$+"_area of fitted qz(1s, 0V)=$(area_qz,.0)";
range fitx2=fitd2o1!col($(nvol1+7));
fitx2[l]$=|X\+((2))\-(eff_H\-(2)O)|;fitx2[u]$=10\+(-21)m\+(2)V\+(-1);fitx2[c]$=fit[c]$+"_area of fitted qz(1s,0V)=$(area_qz,.0)";
for(ii=0;ii<nvol1;ii++)
{
	if(vol[$(ii+1)]<d)
	{
		x2[$(ii+1)]=-(area[$(ii+1)]/area_qz/60)^0.5*17.9;
		fitx2[$(ii+1)]=-(fit[$(ii+1)]/area_qz/60)^0.5*17.9;
	}
	else
	{
		x2[$(ii+1)]=(area[$(ii+1)]/area_qz/60)^0.5*17.9;
		fitx2[$(ii+1)]=(fit[$(ii+1)]/area_qz/60)^0.5*17.9;
	}
}

//calculate the relative imaginary part of X(2)*************************************************************
//range relx2=fitd2o1!col($(nvol1+8));
//relx2[l]$=relative |X\+((2))\-(eff_H\-(2)O)|;relx2[c]$="refto("+[refbook$]fitd2o1!col(1)[c]$+"_0v)_"+area[c]$;
//range relfitx2=fitd2o1!col($(nvol1+9));
//relfitx2[l]$=relative |X\+((2))\-(eff_H\-(2)O)|;relfitx2[c]$="refto("+[refbook$]fitd2o1!col(1)[c]$+"_0v)_"+fit[c]$;
//double ref;
//for(ii=0;ii<nrefvol;ii++)
//{
	//var=[refbook$]fitd2o1!cell($(ii+1),$(nrefvol+2));
	//ref=$([refbook$]fitd2o1!cell($(ii+1),$(nrefvol+6)));
	//reffit=$([refbook$]fitd2o1!cell($(ii+1),$(nrefvol+7)));
	//if(var==0)
	//{
		//break;
	//}
//}
//for(ii=0;ii<nvol1;ii++)
//{
	//relx2[$(ii+1)]=x2[$(ii+1)]/ref;
	//relfitx2[$(ii+1)]=fitx2[$(ii+1)]/reffit;
//}

